name: Build and Push Docker Image

on:
  push:
    branches:
      - main

permissions:
  contents: read
  packages: write

jobs:
  build-and-push:
    runs-on: ubuntu-latest

    steps:
      # Checkout the repository to access the Dockerfile
      - name: Checkout repository
        uses: actions/checkout@v4

      # Log in to GitHub Container Registry
      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Lowercase owner
        id: lowercase_owner
        run: |
          echo "owner=${OWNER,,}" >>$GITHUB_OUTPUT
        env:
          OWNER: '${{ github.repository_owner }}'

      - name: Extract branch name
        shell: bash
        run: echo "branch=${GITHUB_HEAD_REF:-${GITHUB_REF#refs/heads/}}" >> $GITHUB_OUTPUT
        id: extract_branch

      - name: Cache node_modules
        uses: actions/cache@v3
        id: cache-node-modules
        with:
          path: |
            .yarn/install-state.gz
            node_modules
            apps/*/node_modules
            packages/*/node_modules
          key: lock-${{ hashFiles('yarn.lock') }}
          restore-keys: |
            lock-

      - name: Install dependencies
        shell: bash
        run: yarn --immutable

      - name: Scaffold
        shell: bash
        run: yarn moon docker scaffold web discord-bot backend proto i18n tiptap

      # Build and push the Docker image
      - name: Build and Push Docker Image
        uses: docker/build-push-action@v4
        with:
          context: .
          push: true
          tags: |
            ghcr.io/${{ steps.lowercase_owner.outputs.owner }}/${{ github.event.repository.name }}:${{ steps.extract_branch.outputs.branch }}
            ghcr.io/${{ steps.lowercase_owner.outputs.owner }}/${{ github.event.repository.name }}:${{ github.sha }}
          target: runtime
          build-args: NODE_VERSION=20.11.1
