### This file was generated by Nexus Schema
### Do not make changes to this file directly

input CreateFormInput {
  templateId: ID!
}

"""
A DateTime value consumable with Luxon
"""
scalar DateTime

type DiscordUser {
  avatar: URL!
  banner_color: String!
  global_name: String!
  id: ID!
  locale: String!
  username: String!
}

type Form {
  banner: URL!
  createdAt: DateTime!
  description: JSONObject!
    @deprecated(reason: "This field is only planned, it responds with JSON instead of HTML/Text")
  id: ID!
  name: String
  template: Template!
  updatedAt: DateTime!
}

type FormConnection {
  """
  https://facebook.github.io/relay/graphql/connections.htm#sec-Edge-Types
  """
  edges: [FormEdge!]!

  """
  https://facebook.github.io/relay/graphql/connections.htm#sec-undefined.PageInfo
  """
  pageInfo: PageInfo!
}

type FormEdge {
  """
  https://facebook.github.io/relay/graphql/connections.htm#sec-Cursor
  """
  cursor: String!

  """
  https://facebook.github.io/relay/graphql/connections.htm#sec-Node
  """
  node: Form!
}

enum FormFieldKind {
  Age
  ConfirmEvent
  Email
  Gender
  PreferredName
}

type FormSubmission {
  createdAt: DateTime!
  data: [FormSubmissionData!]!
  form: Form!
  id: ID!
}

type FormSubmissionConnection {
  """
  https://facebook.github.io/relay/graphql/connections.htm#sec-Edge-Types
  """
  edges: [FormSubmissionEdge!]!

  """
  https://facebook.github.io/relay/graphql/connections.htm#sec-undefined.PageInfo
  """
  pageInfo: PageInfo!
}

type FormSubmissionData {
  name: String!
  value: String
}

type FormSubmissionEdge {
  """
  https://facebook.github.io/relay/graphql/connections.htm#sec-Cursor
  """
  cursor: String!

  """
  https://facebook.github.io/relay/graphql/connections.htm#sec-Node
  """
  node: FormSubmission!
}

"""
The `JSONObject` scalar type represents JSON objects as specified by [ECMA-404](http://www.ecma-international.org/publications/files/ECMA-ST/ECMA-404.pdf).
"""
scalar JSONObject
  @specifiedBy(url: "http://www.ecma-international.org/publications/files/ECMA-ST/ECMA-404.pdf")

type Mutation {
  createForm(input: CreateFormInput!): Form!
  createTemplate: Template!
  removeForm(input: RemoveFormInput!): Boolean!
  removeTemplate(input: RemoveTemplateInput!): Boolean!
  submitForm(data: [SubmitFormDataInput!]!, where: SubmitFormWhereInput!): Boolean!
  updateForm(data: UpdateFormDataInput!, where: UpdateFormWhereInput!): Form
  updateTemplate(data: UpdateTemplateDataInput!, where: UpdateTemplateWhereInput!): Template
}

"""
PageInfo cursor, as defined in https://facebook.github.io/relay/graphql/connections.htm#sec-undefined.PageInfo
"""
type PageInfo {
  """
  The cursor corresponding to the last nodes in edges. Null if the connection is empty.
  """
  endCursor: String

  """
  Used to indicate whether more edges exist following the set defined by the clients arguments.
  """
  hasNextPage: Boolean

  """
  Used to indicate whether more edges exist prior to the set defined by the clients arguments.
  """
  hasPreviousPage: Boolean

  """
  The cursor corresponding to the first nodes in edges. Null if the connection is empty.
  """
  startCursor: String

  """
  The total amount of items in the repository after filters are applied
  """
  totalCount: Int
}

input PaginationFilter {
  column: String!
  filter: String!
}

input PaginationSorting {
  order: PaginationSortingOrder!
  sort: String!
}

enum PaginationSortingOrder {
  Asc
  Desc
}

type Query {
  form(where: WhereIdInput!): Form
  formSubmissions(
    """
    Returns the elements in the list that come after the specified cursor
    """
    after: String

    """
    Returns the elements in the list that come before the specified cursor
    """
    before: String
    filter: [PaginationFilter!]

    """
    Returns the first n elements from the list.
    """
    first: Int

    """
    Returns the last n elements from the list.
    """
    last: Int
    sort: [PaginationSorting!]
  ): FormSubmissionConnection!
  forms(
    """
    Returns the elements in the list that come after the specified cursor
    """
    after: String

    """
    Returns the elements in the list that come before the specified cursor
    """
    before: String
    filter: [PaginationFilter!]

    """
    Returns the first n elements from the list.
    """
    first: Int

    """
    Returns the last n elements from the list.
    """
    last: Int
    sort: [PaginationSorting!]
  ): FormConnection!
  template(where: WhereIdInput!): Template
  templates(
    """
    Returns the elements in the list that come after the specified cursor
    """
    after: String

    """
    Returns the elements in the list that come before the specified cursor
    """
    before: String
    filter: [PaginationFilter!]

    """
    Returns the first n elements from the list.
    """
    first: Int

    """
    Returns the last n elements from the list.
    """
    last: Int
    sort: [PaginationSorting!]
  ): TemplateConnection!
  viewer: User
}

input RemoveFormInput {
  id: ID!
}

input RemoveTemplateInput {
  id: ID!
}

input SubmitFormDataInput {
  name: String!
  value: String
}

input SubmitFormInput {
  id: ID!
}

input SubmitFormWhereInput {
  id: ID!
}

type Template {
  banner: URL!
  bannerOffset: Int!
  createdAt: DateTime!
  description: JSONObject
  fields: [FormFieldKind!]!
  id: ID!
  name: String!
  updatedAt: DateTime!
}

type TemplateConnection {
  """
  https://facebook.github.io/relay/graphql/connections.htm#sec-Edge-Types
  """
  edges: [TemplateEdge!]!

  """
  https://facebook.github.io/relay/graphql/connections.htm#sec-undefined.PageInfo
  """
  pageInfo: PageInfo!
}

type TemplateEdge {
  """
  https://facebook.github.io/relay/graphql/connections.htm#sec-Cursor
  """
  cursor: String!

  """
  https://facebook.github.io/relay/graphql/connections.htm#sec-Node
  """
  node: Template!
}

"""
A field whose value conforms to the standard URL format as specified in RFC3986: https://www.ietf.org/rfc/rfc3986.txt.
"""
scalar URL

input UpdateFormDataInput {
  name: String!
}

input UpdateFormWhereInput {
  id: ID!
}

input UpdateTemplateDataInput {
  banner: Upload
  bannerOffset: Int!
  description: JSONObject
  fields: [FormFieldKind!]!
  name: String!
}

input UpdateTemplateWhereInput {
  id: ID!
}

"""
The `Upload` scalar type represents a file upload.
"""
scalar Upload

type User {
  discord: DiscordUser!
  id: ID!
  roles: [UserRole!]!
}

enum UserRole {
  Admin
  Editor
  Owner
  Publisher
}

input WhereIdInput {
  id: ID!
}
